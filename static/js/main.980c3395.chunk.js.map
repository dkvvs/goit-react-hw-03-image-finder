{"version":3,"sources":["App.module.css","components/ImageGalleryItem/ImageGalleryItem.module.css","components/Button/Button.module.css","components/Modal/Modal.module.css","components/ImageGallery/ImageGallery.module.css","components/Searchbar/Searchbar.js","components/ImageGalleryItem/ImageGalleryItem.js","components/ImageGallery/ImageGallery.js","components/Button/Button.js","components/Modal/Modal.js","components/Loader/Loader.js","apiServices/apiServices.js","App.js","reportWebVitals.js","index.js","components/Searchbar/Searchbar.module.css"],"names":["module","exports","Searchbar","state","searchValue","handleChange","target","setState","value","handleSubmit","event","preventDefault","trim","props","onSearch","toast","warn","position","POSITION","TOP_LEFT","this","className","s","searchbar","searchForm","onSubmit","type","searchFormButton","searchFormButtonLabel","searchFormInput","name","onChange","autoComplete","autoFocus","placeholder","Component","ImageGalleryItem","largeImageURL","webformatURL","onOpenImage","imageGalleryItem","imageGalleryItemImage","url","src","alt","onClick","ImageGallery","iamges","imageGallery","map","id","Button","boxButton","button","modalRoot","document","querySelector","Modal","handleKeyDown","code","console","log","onClose","handleBackdropClick","currentTarget","window","addEventListener","removeEventListener","onLargeImage","createPortal","modalBackdrop","modalContent","Loader","loading","size","color","apiServices","fetchImages","searchQuery","page","fetch","then","res","json","App","showModal","images","largeImage","handleSearchSubmit","handleOpenLargeImage","imageUrl","handleAddPage","prevState","toggleModal","prevProps","data","hits","catch","error","finally","scrollTo","top","documentElement","scrollHeight","behavior","buttonIsVisible","length","app","boxSpinner","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","getElementById"],"mappings":"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","file":"static/js/main.980c3395.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"app\":\"App_app__or_lB\",\"boxSpinner\":\"App_boxSpinner__2ZPwx\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"imageGalleryItem\":\"ImageGalleryItem_imageGalleryItem__1jDXN\",\"imageGalleryItemImage\":\"ImageGalleryItem_imageGalleryItemImage__3ECFu\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"boxButton\":\"Button_boxButton__1y26B\",\"button\":\"Button_button__D00lr\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"modalBackdrop\":\"Modal_modalBackdrop__3fSAG\",\"modalContent\":\"Modal_modalContent__29JOt\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"imageGallery\":\"ImageGallery_imageGallery__ltaYD\"};","import React, { Component } from 'react';\r\nimport { toast } from 'react-toastify';\r\nimport 'react-toastify/dist/ReactToastify.css';\r\nimport s from './Searchbar.module.css';\r\nimport PropTypes from 'prop-types';\r\n\r\nclass Searchbar extends Component {\r\n  state = {\r\n    searchValue: '',\r\n  };\r\n\r\n  static propTypes = {\r\n    onSearch: PropTypes.func,\r\n  };\r\n\r\n  handleChange = ({ target }) => {\r\n    this.setState({ searchValue: target.value });\r\n  };\r\n\r\n  handleSubmit = event => {\r\n    event.preventDefault();\r\n    const { searchValue } = this.state;\r\n    if (searchValue.trim() === '') {\r\n      toast.warn('Введите ключевое слово для поиска изображения', {\r\n        position: toast.POSITION.TOP_LEFT,\r\n      });\r\n      return;\r\n    }\r\n    this.props.onSearch(searchValue);\r\n    this.setState({ searchValue: '' });\r\n  };\r\n\r\n  render() {\r\n    const { searchValue } = this.state;\r\n    return (\r\n      <header className={s.searchbar}>\r\n        <form className={s.searchForm} onSubmit={this.handleSubmit}>\r\n          <button type=\"submit\" className={s.searchFormButton}>\r\n            <span className={s.searchFormButtonLabel}>Search</span>\r\n          </button>\r\n\r\n          <input\r\n            className={s.searchFormInput}\r\n            type=\"text\"\r\n            name=\"searchValue\"\r\n            value={searchValue}\r\n            onChange={this.handleChange}\r\n            autoComplete=\"off\"\r\n            autoFocus\r\n            placeholder=\"Search images and photos\"\r\n          />\r\n        </form>\r\n      </header>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Searchbar;\r\n","import React from 'react';\r\nimport s from './ImageGalleryItem.module.css';\r\nimport PropTypes from 'prop-types';\r\n\r\nconst ImageGalleryItem = ({ largeImageURL, webformatURL, onOpenImage }) => {\r\n  const handleOpenIamge = () => {\r\n    onOpenImage(largeImageURL);\r\n  };\r\n\r\n  return (\r\n    <li className={s.imageGalleryItem}>\r\n      <img\r\n        className={s.imageGalleryItemImage}\r\n        url={largeImageURL}\r\n        src={webformatURL}\r\n        alt=\"\"\r\n        onClick={handleOpenIamge}\r\n      />\r\n    </li>\r\n  );\r\n};\r\n\r\nImageGalleryItem.propTypes = {\r\n  largeImageURL: PropTypes.string.isRequired,\r\n  webformatURL: PropTypes.string.isRequired,\r\n  onOpenImage: PropTypes.func,\r\n};\r\n\r\nexport default ImageGalleryItem;\r\n","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport s from './ImageGallery.module.css';\r\nimport ImageGalleryItem from '../ImageGalleryItem/ImageGalleryItem';\r\n\r\nconst ImageGallery = ({ iamges, onOpenImage }) => {\r\n  return (\r\n    <ul className={s.imageGallery}>\r\n      {iamges.map(({ id, webformatURL, largeImageURL }) => (\r\n        <ImageGalleryItem\r\n          key={id}\r\n          webformatURL={webformatURL}\r\n          largeImageURL={largeImageURL}\r\n          onOpenImage={onOpenImage}\r\n        />\r\n      ))}\r\n    </ul>\r\n  );\r\n};\r\n\r\nImageGallery.propTypes = {\r\n  iamges: PropTypes.arrayOf(\r\n    PropTypes.shape({\r\n      id: PropTypes.number.isRequired,\r\n      webformatURL: PropTypes.string.isRequired,\r\n      largeImageURL: PropTypes.string.isRequired,\r\n    }),\r\n  ),\r\n};\r\n\r\nexport default ImageGallery;\r\n","import React from 'react';\r\nimport s from './Button.module.css';\r\n\r\nconst Button = ({ onClick }) => {\r\n  return (\r\n    <div className={s.boxButton}>\r\n      <button type=\"button\" className={s.button} onClick={onClick}>\r\n        Load more\r\n      </button>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Button;\r\n","import React, { Component } from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { createPortal } from 'react-dom';\r\nimport s from './Modal.module.css';\r\n\r\nconst modalRoot = document.querySelector('#modal-root');\r\n\r\nclass Modal extends Component {\r\n  componentDidMount() {\r\n    window.addEventListener('keydown', this.handleKeyDown);\r\n  }\r\n\r\n  componentWillUnmount() {\r\n    window.removeEventListener('keydown', this.handleKeyDown);\r\n  }\r\n\r\n  handleKeyDown = event => {\r\n    if (event.code === 'Escape') {\r\n      console.log('kjfdkjfkdjf');\r\n      this.props.onClose();\r\n    }\r\n  };\r\n\r\n  handleBackdropClick = event => {\r\n    if (event.currentTarget === event.target) {\r\n      this.props.onClose();\r\n    }\r\n  };\r\n\r\n  render() {\r\n    const { onLargeImage } = this.props;\r\n    return createPortal(\r\n      <div className={s.modalBackdrop} onClick={this.handleBackdropClick}>\r\n        <div className={s.modalContent}>\r\n          <img src={onLargeImage} alt=\"\" />\r\n        </div>\r\n      </div>,\r\n      modalRoot,\r\n    );\r\n  }\r\n}\r\n\r\nModal.propTypes = {\r\n  onLargeImage: PropTypes.string.isRequired,\r\n};\r\n\r\nexport default Modal;\r\n","import React, { Component } from 'react';\r\nimport PuffLoader from 'react-spinners/PuffLoader';\r\nimport PropTypes from 'prop-types';\r\n\r\nclass Loader extends Component {\r\n  render() {\r\n    const { loading } = this.props;\r\n    return (\r\n      <div className=\"sweet-loading\">\r\n        <PuffLoader size={80} color=\"#df101b\" loading={loading} />\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nLoader.propTypes = {\r\n  loading: PropTypes.bool,\r\n};\r\n\r\nexport default Loader;\r\n","const apiKey = '19490802-1c5184405fc512a55f5ad98ed';\r\n\r\nfunction fetchImages(searchQuery, page) {\r\n  return fetch(\r\n    `https://pixabay.com/api/?q=${searchQuery}&page=${page}&key=${apiKey}&image_type=photo&orientation=horizontal&per_page=12`,\r\n  ).then(res => res.json());\r\n}\r\n\r\nconst apiServices = {\r\n  fetchImages,\r\n};\r\n\r\nexport default apiServices;\r\n","import React, { Component } from 'react';\nimport { ToastContainer } from 'react-toastify';\nimport s from './App.module.css';\nimport Searchbar from './components/Searchbar/Searchbar';\nimport ImageGallery from './components/ImageGallery/ImageGallery';\nimport Button from './components/Button/Button';\nimport Modal from './components/Modal/Modal';\nimport Loader from './components/Loader/Loader';\nimport apiServices from './apiServices/apiServices';\n\nclass App extends Component {\n  state = {\n    showModal: false,\n    searchQuery: '',\n    page: 1,\n    loading: false,\n    images: [],\n    largeImage: '',\n  };\n\n  handleSearchSubmit = searchQuery => {\n    if (this.state.searchQuery !== searchQuery)\n      this.setState({\n        images: [],\n        searchQuery: searchQuery,\n        page: 1,\n      });\n  };\n\n  handleOpenLargeImage = imageUrl => {\n    this.setState({\n      showModal: true,\n      largeImage: imageUrl,\n    });\n  };\n\n  handleAddPage = () => {\n    this.setState(prevState => ({\n      page: prevState.page + 1,\n    }));\n  };\n\n  componentDidUpdate(prevProps, prevState) {\n    const { page, searchQuery } = this.state;\n\n    if (prevState.searchQuery !== searchQuery || prevState.page !== page) {\n      this.setState({\n        loading: true,\n      });\n      apiServices\n        .fetchImages(searchQuery, page)\n        .then(data => {\n          this.setState(prevState => ({\n            images: [...prevState.images, ...data.hits],\n          }));\n        })\n        .catch(error => console.error(error))\n        .finally(() => this.setState({ loading: false }));\n    }\n    window.scrollTo({\n      top: document.documentElement.scrollHeight,\n      behavior: 'smooth',\n    });\n  }\n\n  toggleModal = () => {\n    this.setState(({ showModal }) => ({\n      showModal: !showModal,\n    }));\n  };\n\n  render() {\n    const { images, showModal, loading, largeImage } = this.state;\n    const buttonIsVisible = images.length > 0 && !loading;\n\n    return (\n      <div className={s.app}>\n        <Searchbar onSearch={this.handleSearchSubmit} />\n        <ImageGallery iamges={images} onOpenImage={this.handleOpenLargeImage} />\n        <div className={s.boxSpinner}>\n          <Loader loading={loading} />\n        </div>\n        {buttonIsVisible && <Button onClick={this.handleAddPage} />}\n        {showModal && (\n          <Modal onClose={this.toggleModal} onLargeImage={largeImage} />\n        )}\n        <ToastContainer />\n      </div>\n    );\n  }\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"searchbar\":\"Searchbar_searchbar__Su44x\",\"searchForm\":\"Searchbar_searchForm__3G0Py\",\"searchFormButton\":\"Searchbar_searchFormButton__3GOWa\",\"searchFormButtonLabel\":\"Searchbar_searchFormButtonLabel__1Shma\",\"searchFormInput\":\"Searchbar_searchFormInput__3yURf\"};"],"sourceRoot":""}